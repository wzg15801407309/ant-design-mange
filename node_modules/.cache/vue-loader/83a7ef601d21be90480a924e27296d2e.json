{"remainingRequest":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/views/userCommunity/module/table.vue?vue&type=style&index=0&id=f7a127d4&lang=less&scoped=true&","dependencies":[{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/views/userCommunity/module/table.vue","mtime":1581057012343},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n//@import url(); 引入公共css类\r\n",{"version":3,"sources":["table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+KA","file":"table.vue","sourceRoot":"src/views/userCommunity/module","sourcesContent":["<!--  -->\r\n<template>\r\n  <!-- table -->\r\n  <a-card>\r\n    <a-table :columns=\"columns\"\r\n             :dataSource=\"data\"\r\n             :pagination=\"false\"\r\n             :loading=\"memberLoading\">\r\n      <template v-for=\"(col, i) in ['name', 'workId', 'department']\"\r\n                :slot=\"col\"\r\n                slot-scope=\"text, record\">\r\n        <a-input :key=\"col\"\r\n                 v-if=\"record.editable\"\r\n                 style=\"margin: -5px 0\"\r\n                 :value=\"text\"\r\n                 :placeholder=\"columns[i].title\"\r\n                 @change=\"e => handleChange(e.target.value, record.key, col)\" />\r\n        <template v-else>{{ text }}</template>\r\n      </template>\r\n      <template slot=\"operation\"\r\n                slot-scope=\"text, record\">\r\n        <template v-if=\"record.editable\">\r\n          <span v-if=\"record.isNew\">\r\n            <a @click=\"saveRow(record)\">添加</a>\r\n            <a-divider type=\"vertical\" />\r\n            <a-popconfirm title=\"是否要删除此行？\"\r\n                          @confirm=\"remove(record.key)\">\r\n              <a>删除</a>\r\n            </a-popconfirm>\r\n          </span>\r\n          <span v-else>\r\n            <a @click=\"saveRow(record)\">保存</a>\r\n            <a-divider type=\"vertical\" />\r\n            <a @click=\"cancel(record.key)\">取消</a>\r\n          </span>\r\n        </template>\r\n        <span v-else>\r\n          <a @click=\"toggle(record.key)\">编辑</a>\r\n          <a-divider type=\"vertical\" />\r\n          <a-popconfirm title=\"是否要删除此行？\"\r\n                        @confirm=\"remove(record.key)\">\r\n            <a>删除</a>\r\n          </a-popconfirm>\r\n        </span>\r\n      </template>\r\n    </a-table>\r\n    <!-- <a-button style=\"width: 100%; margin-top: 16px; margin-bottom: 8px\"\r\n              type=\"dashed\"\r\n              icon=\"plus\"\r\n              @click=\"newMember\">新增成员</a-button> -->\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  //import引入的组件需要注入到对象中才能使用\r\n  components: {},\r\n  data() {\r\n    //这里存放数据\r\n    return {\r\n      loading: false,\r\n      memberLoading: false,\r\n      columns: [\r\n        {\r\n          title: '论坛名',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n          width: '20%',\r\n          scopedSlots: { customRender: 'name' }\r\n        },\r\n        {\r\n          title: '论坛id',\r\n          dataIndex: 'workId',\r\n          key: 'workId',\r\n          width: '20%',\r\n          scopedSlots: { customRender: 'workId' }\r\n        },\r\n        {\r\n          title: '加入时间',\r\n          dataIndex: 'department',\r\n          key: 'department',\r\n          width: '40%',\r\n          scopedSlots: { customRender: 'department' }\r\n        },\r\n        {\r\n          title: '操作',\r\n          key: 'action',\r\n          scopedSlots: { customRender: 'operation' }\r\n        }\r\n      ],\r\n      data: [\r\n        // {\r\n        //   key: '1',\r\n        //   name: '小明',\r\n        //   workId: '001',\r\n        //   editable: false,\r\n        //   department: '行政部'\r\n        // },\r\n        // {\r\n        //   key: '2',\r\n        //   name: '李莉',\r\n        //   workId: '002',\r\n        //   editable: false,\r\n        //   department: 'IT部'\r\n        // },\r\n        // {\r\n        //   key: '3',\r\n        //   name: '王小帅',\r\n        //   workId: '003',\r\n        //   editable: false,\r\n        //   department: '财务部'\r\n        // }\r\n      ],\r\n      errors: []\r\n    }\r\n  },\r\n  //监听属性 类似于data概念\r\n  computed: {},\r\n  //监控data中的数据变化\r\n  watch: {},\r\n  //方法集合\r\n  methods: {\r\n    handleChange(value, key, column) {\r\n      const newData = [...this.data]\r\n      const target = newData.filter(item => key === item.key)[0]\r\n      if (target) {\r\n        target[column] = value\r\n        this.data = newData\r\n      }\r\n    },\r\n    newMember() {\r\n      const length = this.data.length\r\n      this.data.push({\r\n        key:\r\n          length === 0\r\n            ? '1'\r\n            : (parseInt(this.data[length - 1].key) + 1).toString(),\r\n        name: '',\r\n        workId: '',\r\n        department: '',\r\n        editable: true,\r\n        isNew: true\r\n      })\r\n    },\r\n    remove(key) {\r\n      const newData = this.data.filter(item => item.key !== key)\r\n      this.data = newData\r\n    },\r\n    saveRow(record) {\r\n      this.memberLoading = true\r\n      const { key, name, workId, department } = record\r\n      if (!name || !workId || !department) {\r\n        this.memberLoading = false\r\n        console.log('请填写完整成员信息。')\r\n        // this.$message.error(\"请填写完整成员信息。\");\r\n        return\r\n      }\r\n      // 模拟网络请求、卡顿 800ms\r\n      new Promise(resolve => {\r\n        setTimeout(() => {\r\n          resolve({ loop: false })\r\n        }, 800)\r\n      }).then(() => {\r\n        const target = this.data.filter(item => item.key === key)[0]\r\n        target.editable = false\r\n        target.isNew = false\r\n        this.memberLoading = false\r\n      })\r\n    }\r\n  },\r\n  //生命周期 - 创建完成（可以访问当前this实例）\r\n  created() {}\r\n}\r\n</script>\r\n<style lang='less' scoped>\r\n//@import url(); 引入公共css类\r\n</style>"]}]}