{"remainingRequest":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/views/login/index.vue?vue&type=style&index=0&id=37dfd6fc&lang=less&scoped=true&","dependencies":[{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/views/login/index.vue","mtime":1582714300954},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.login {\n  .title {\n    font-size: 16px;\n    font-weight: bold;\n    margin: 40px 0;\n    color: rgba(0, 0, 0, 0.5);\n    span {\n      font-size: 20px;\n    }\n  }\n  .ant-alert {\n    margin-bottom: 20px;\n  }\n  .anticon {\n    color: rgba(0, 0, 0, 0.25);\n  }\n  .login-button {\n    margin-top: 10px;\n    width: 100%;\n  }\n  .forge-password {\n    float: right;\n    font-size: 14px;\n  }\n  .register-button {\n    padding: 0 15px;\n    font-size: 14px;\n    height: 40px;\n    width: 100%;\n    font-weight: 500;\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/login","sourcesContent":["<!-- 登录界面 -->\n<template>\n  <div class=\"login\">\n    <a-spin :spinning=\"loading\">\n      <!-- <div class=\"otherlogin\" v-if=\"otherinfo\">\n      <p>{{ $t('login.loginto') }}</p>\n      <div class=\"logo\"><img :src=\"otherinfo.logo\" alt=\"logo\" /></div>\n      <a-button\n        type=\"link\"\n        icon=\"close\"\n        class=\"btn\"\n        @click=\"otherinfo = null\"\n      />\n    </div> -->\n      <div class=\"title\">\n        <span>{{ $t('login.login') }} </span>\n        {{ otherinfo ? otherinfo.title : 'GANE NANUM' }}\n      </div>\n      <!-- 表单 -->\n      <a-form ref=\"formLogin\" :form=\"form\" @submit=\"handleSubmit\">\n        <!-- username -->\n        <a-form-item>\n          <a-input\n            size=\"large\"\n            type=\"text\"\n            :placeholder=\"$t('login.placeholderUsername')\"\n            v-decorator=\"decorator.username\"\n          >\n            <a-icon slot=\"prefix\" type=\"user\" />\n          </a-input>\n        </a-form-item>\n        <!-- password -->\n        <a-form-item>\n          <a-input\n            size=\"large\"\n            type=\"password\"\n            autocomplete=\"false\"\n            :placeholder=\"$t('login.placeholderPassword')\"\n            v-decorator=\"decorator.password\"\n          >\n            <a-icon slot=\"prefix\" type=\"lock\" />\n          </a-input>\n        </a-form-item>\n        <a-form-item>\n          <a-checkbox v-decorator=\"['rememberMe']\">{{\n            $t('login.autoLogin')\n          }}</a-checkbox>\n          <router-link :to=\"{ name: 'resetPassword' }\" class=\"forge-password\"\n            >{{ $t('login.forgetpwd') }}?</router-link\n          >\n        </a-form-item>\n        <el-alert\n          v-show=\"errText\"\n          :title=\"errText\"\n          type=\"error\"\n          show-icon\n          @close=\"\n            () => {\n              errText = null\n            }\n          \"\n        />\n        <a-form-item>\n          <a-button\n            size=\"large\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            class=\"login-button\"\n            :loading=\"loginLoding\"\n            >{{ $t('login.login') }}</a-button\n          >\n        </a-form-item>\n\n        <!-- loading -->\n        <OtherLogin @changeloading=\"changeloading\" />\n        <a-divider style=\"color:#666;margin:50px 0 20px;font-size:12px\">\n          {{ $t('login.notAccount') }}</a-divider\n        >\n        <a-form-item>\n          <router-link :to=\"{ name: 'register' }\">\n            <a-button size=\"large\" class=\"register-button\">{{\n              $t('login.createAccount')\n            }}</a-button>\n          </router-link>\n        </a-form-item>\n      </a-form>\n    </a-spin>\n  </div>\n</template>\n<script>\nimport { mapActions } from 'vuex'\nimport { checkCode } from '@/api/project'\nimport { login, getUserInfo, platformLogin } from '@/api/login'\nimport OtherLogin from './OtherLogin.vue'\nexport default {\n  components: {\n    OtherLogin\n  },\n  data() {\n    return {\n      form: this.$form.createForm(this),\n      loginLoding: false,\n      loading: false,\n      errText: null,\n      // 定时器\n      timeout: null,\n      decorator: {\n        username: [\n          'username',\n          {\n            rules: [\n              {\n                required: true,\n                message: this.$t('login.placeholderUsername')\n              },\n              { validator: this.handleUsernameOrEmail }\n            ],\n            validateTrigger: 'blur'\n          }\n        ],\n        password: [\n          'password',\n          {\n            rules: [\n              {\n                required: true,\n                message: this.$t('login.placeholderPassword')\n              }\n            ],\n            validateTrigger: 'blur'\n          }\n        ]\n      },\n      otherinfo: null,\n      plantformdata: {}\n    }\n  },\n\n  // 方法集合\n  methods: {\n    ...mapActions(['SetToken', 'SetUserInfo']),\n    // 表单的提交\n    handleSubmit(e) {\n      e.preventDefault()\n      this.errText = null\n      this.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          // serve请求\n          this.loginLoding = true\n          login(values).then(res => {\n            if (res.state) {\n              this.SetToken(res.body)\n              getUserInfo().then(res => {\n                if (res.state) {\n                  this.SetUserInfo(res.body)\n                  // 登陆成功\n                  this.loginSuccess()\n                }\n              })\n            } else {\n              this.errText = res.body\n              // this.$message.error(res.body)\n              this.loginLoding = false\n            }\n          })\n        }\n      })\n    },\n    loginSuccess() {\n      // 判断是否是其他登陆\n      if (this.otherinfo) {\n        window.location.href = this.$utils.getUrl(\n          this.otherinfo.type,\n          this.otherinfo.code\n        )\n      } else {\n        // 正常登陆\n        this.$router.push({ name: 'index' })\n        this.$notification.success({\n          message: this.$t('login.welcome'),\n          description: `${this.$utils.timeFix(this.$t('welcome'))} ${this.$t(\n            'login.welcomeBack'\n          )}`\n        })\n      }\n    },\n    // 自定义指令中的方法的实现\n    handleUsernameOrEmail(rule, value, callback) {\n      value ? null : callback()\n      const regex = /^[A-Za-z\\d]+([-_.][A-Za-z\\d]+)*@([A-Za-z\\d]+[-.])+[A-Za-z\\d]{2,4}$/\n      regex.test(value) ? callback() : callback(this.$t('login.inputEmail'))\n    },\n    changeloading() {\n      this.loading = true\n    },\n    //论坛预约的登录方式\n    loginOtherWeb() {\n      // 检测跳转涞源 如果路由上传入了 to 和 code\n      const { to, code } = this.$route.query\n      if ((to == 'community' || to == 'reservation') && code) {\n        const data = { type: to == 'community' ? 1 : 0, code }\n        // 获取 项目信息\n        checkCode(data.type, data.code).then(res => {\n          if (res.state) {\n            this.otherinfo = res.body\n            this.otherinfo.type = data.type\n          }\n        })\n      }\n    }\n  },\n  mounted() {\n    this.loginOtherWeb()\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.login {\n  .title {\n    font-size: 16px;\n    font-weight: bold;\n    margin: 40px 0;\n    color: rgba(0, 0, 0, 0.5);\n    span {\n      font-size: 20px;\n    }\n  }\n  .ant-alert {\n    margin-bottom: 20px;\n  }\n  .anticon {\n    color: rgba(0, 0, 0, 0.25);\n  }\n  .login-button {\n    margin-top: 10px;\n    width: 100%;\n  }\n  .forge-password {\n    float: right;\n    font-size: 14px;\n  }\n  .register-button {\n    padding: 0 15px;\n    font-size: 14px;\n    height: 40px;\n    width: 100%;\n    font-weight: 500;\n  }\n}\n</style>\n"]}]}