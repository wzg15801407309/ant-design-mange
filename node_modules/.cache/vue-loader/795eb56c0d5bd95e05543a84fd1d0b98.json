{"remainingRequest":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/views/projectNew/Step2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/views/projectNew/Step2.vue","mtime":1582634015562},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport AvatarModal from '@/views/projectSetting/AvatarModal'\r\nimport { crrateProject, checkCode } from '@/api/project.js'\r\nimport { mapState } from 'vuex'\r\nexport default {\r\n  name: 'Step2',\r\n  props: ['type'],\r\n  components: { AvatarModal },\r\n  data() {\r\n    return {\r\n      urllink: 'https://',\r\n      labelCol: { lg: { span: 6 }, sm: { span: 6 } },\r\n      wrapperCol: { lg: { span: 10 }, sm: { span: 10 } },\r\n      form: this.$form.createForm(this),\r\n      types: '',\r\n      imageUrl: '',\r\n      loading: false,\r\n      iscode: true\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      token: state => state.user.token,\r\n      userInfo: state => state.user.info\r\n    })\r\n  },\r\n  methods: {\r\n    handleIshave(rule, value, callback) {\r\n      if (!value) {\r\n        callback()\r\n        return false\r\n      }\r\n      checkCode(this.type, value).then(res => {\r\n        if (res.body['id']) {\r\n          callback(new Error(this.$t('common.iscode')))\r\n        } else {\r\n          callback()\r\n        }\r\n      })\r\n    },\r\n    nextStep() {\r\n      this.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          values.logo = this.imageUrl\r\n          values.type = this.type\r\n          this.loading = true\r\n          crrateProject(values).then(res => {\r\n            this.loading = false\r\n            if (res.state) {\r\n              this.$router.push({\r\n                name: 'apps',\r\n                params: { id: this.userInfo.id }\r\n              })\r\n            } else {\r\n              this.$message.error(res.body)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    changeImgUrl(imageUrl) {\r\n      this.imageUrl = imageUrl\r\n    },\r\n    prevStep() {\r\n      this.$emit('prevStep')\r\n    },\r\n    typeShow() {\r\n      this.types = this.$utils.typeWord(this.type)\r\n\r\n      if (this.type == 2) {\r\n        this.iscode = false\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.typeShow()\r\n    this.urllink = this.$utils.getLinkUrl(this.type)\r\n  }\r\n}\r\n",{"version":3,"sources":["Step2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Step2.vue","sourceRoot":"src/views/projectNew","sourcesContent":["<template>\r\n  <div style=\"padding-top:20px;\">\r\n    <a-form :form=\"form\">\r\n      <a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n        <span slot=\"label\">\r\n          <a-tooltip slot=\"suffix\" :title=\"$t('project.Itemtypeprompt')\">\r\n            <a-icon type=\"question-circle\" style=\"color: rgba(0,0,0,.45)\" />\r\n          </a-tooltip>\r\n          {{ $t('project.projectType') }}\r\n        </span>\r\n        {{ types == '预约' ? $t('project.order') : '' }}\r\n        {{ types == '论坛' ? $t('project.forum') : '' }}\r\n      </a-form-item>\r\n      <a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n        <span slot=\"label\">\r\n          <a-tooltip slot=\"suffix\" :title=\"$t('project.Itemnameprompt')\">\r\n            <a-icon type=\"question-circle\" style=\"color: rgba(0,0,0,.45)\" />\r\n          </a-tooltip>\r\n          {{ $t('project.projectName') }}\r\n        </span>\r\n        <a-input\r\n          v-decorator=\"[\r\n            'title',\r\n            { rules: [{ required: true, message: $t('project.projectreq') }] }\r\n          ]\"\r\n          name=\"title\"\r\n          :placeholder=\"$t('project.pproject')\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n        <span slot=\"label\">\r\n          <a-tooltip slot=\"suffix\" :title=\"$t('project.Itemcodeprompt')\">\r\n            <a-icon type=\"question-circle\" style=\"color: rgba(0,0,0,.45)\" />\r\n          </a-tooltip>\r\n          {{ $t('project.code') }}\r\n        </span>\r\n        <a-input\r\n          class=\"smallinput\"\r\n          :addonBefore=\"urllink\"\r\n          v-decorator=\"[\r\n            'code',\r\n            {\r\n              rules: [\r\n                { required: true, message: $t('project.codereq') },\r\n                { validator: this.handleIshave }\r\n              ]\r\n            }\r\n          ]\"\r\n          name=\"code\"\r\n          :placeholder=\"$t('project.Pcode')\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n        <span slot=\"label\">\r\n          <a-tooltip slot=\"suffix\" :title=\"$t('project.Itemlogoprompt')\">\r\n            <a-icon type=\"question-circle\" style=\"color: rgba(0,0,0,.45)\" />\r\n          </a-tooltip>\r\n          {{ $t('project.projectLog') }}\r\n        </span>\r\n        <AvatarModal :imageUrl=\"imageUrl\" @changeImgUrl=\"changeImgUrl\" />\r\n      </a-form-item>\r\n      <a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n        <span slot=\"label\">\r\n          <a-tooltip\r\n            slot=\"suffix\"\r\n            :title=\"$t('project.Itemintroductionprompt')\"\r\n          >\r\n            <a-icon type=\"question-circle\" style=\"color: rgba(0,0,0,.45)\" />\r\n          </a-tooltip>\r\n          {{ $t('project.projectPresentation') }}\r\n        </span>\r\n        <a-textarea\r\n          rows=\"4\"\r\n          :placeholder=\"$t('project.projectPresentationreq')\"\r\n          v-decorator=\"[\r\n            'description',\r\n            {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: $t('project.projectPresentationreq')\r\n                }\r\n              ]\r\n            }\r\n          ]\"\r\n        />\r\n      </a-form-item>\r\n\r\n      <a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n        <span slot=\"label\">\r\n          <a-tooltip slot=\"suffix\" :title=\"$t('project.Itempublicprompt')\">\r\n            <a-icon type=\"question-circle\" style=\"color: rgba(0,0,0,.45)\" />\r\n          </a-tooltip>\r\n          {{ $t('project.projectpublic') }}\r\n        </span>\r\n        <a-radio-group\r\n          v-decorator=\"[\r\n            'state',\r\n            {\r\n              initialValue: 0,\r\n              rules: [\r\n                {\r\n                  required: true\r\n                }\r\n              ]\r\n            }\r\n          ]\"\r\n        >\r\n          <a-radio :value=\"0\">{{ $t('project.private') }}</a-radio>\r\n          <a-radio :value=\"1\">{{ $t('project.public') }}</a-radio>\r\n        </a-radio-group>\r\n      </a-form-item>\r\n      <a-form-item :wrapperCol=\"{ span: 19, offset: 5 }\">\r\n        <a-button @click=\"prevStep\" type=\"link\">{{\r\n          $t('project.LastStep')\r\n        }}</a-button>\r\n        <a-button\r\n          style=\"margin-left: 8px\"\r\n          :loading=\"loading\"\r\n          type=\"primary\"\r\n          @click=\"nextStep\"\r\n          >{{ $t('project.submint') }}</a-button\r\n        >\r\n      </a-form-item>\r\n    </a-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AvatarModal from '@/views/projectSetting/AvatarModal'\r\nimport { crrateProject, checkCode } from '@/api/project.js'\r\nimport { mapState } from 'vuex'\r\nexport default {\r\n  name: 'Step2',\r\n  props: ['type'],\r\n  components: { AvatarModal },\r\n  data() {\r\n    return {\r\n      urllink: 'https://',\r\n      labelCol: { lg: { span: 6 }, sm: { span: 6 } },\r\n      wrapperCol: { lg: { span: 10 }, sm: { span: 10 } },\r\n      form: this.$form.createForm(this),\r\n      types: '',\r\n      imageUrl: '',\r\n      loading: false,\r\n      iscode: true\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      token: state => state.user.token,\r\n      userInfo: state => state.user.info\r\n    })\r\n  },\r\n  methods: {\r\n    handleIshave(rule, value, callback) {\r\n      if (!value) {\r\n        callback()\r\n        return false\r\n      }\r\n      checkCode(this.type, value).then(res => {\r\n        if (res.body['id']) {\r\n          callback(new Error(this.$t('common.iscode')))\r\n        } else {\r\n          callback()\r\n        }\r\n      })\r\n    },\r\n    nextStep() {\r\n      this.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          values.logo = this.imageUrl\r\n          values.type = this.type\r\n          this.loading = true\r\n          crrateProject(values).then(res => {\r\n            this.loading = false\r\n            if (res.state) {\r\n              this.$router.push({\r\n                name: 'apps',\r\n                params: { id: this.userInfo.id }\r\n              })\r\n            } else {\r\n              this.$message.error(res.body)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    changeImgUrl(imageUrl) {\r\n      this.imageUrl = imageUrl\r\n    },\r\n    prevStep() {\r\n      this.$emit('prevStep')\r\n    },\r\n    typeShow() {\r\n      this.types = this.$utils.typeWord(this.type)\r\n\r\n      if (this.type == 2) {\r\n        this.iscode = false\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.typeShow()\r\n    this.urllink = this.$utils.getLinkUrl(this.type)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.step-form-style-desc {\r\n  padding: 0 56px;\r\n  color: rgba(0, 0, 0, 0.45);\r\n\r\n  h3 {\r\n    margin: 0 0 12px;\r\n    color: rgba(0, 0, 0, 0.45);\r\n    font-size: 16px;\r\n    line-height: 32px;\r\n  }\r\n\r\n  h4 {\r\n    margin: 0 0 4px;\r\n    color: rgba(0, 0, 0, 0.45);\r\n    font-size: 14px;\r\n    line-height: 22px;\r\n  }\r\n\r\n  p {\r\n    margin-top: 0;\r\n    margin-bottom: 12px;\r\n    line-height: 22px;\r\n  }\r\n}\r\n/deep/.ant-input-group-addon {\r\n  color: rgba(0, 0, 0, 0.65) !important;\r\n  background: transparent;\r\n  border: 0;\r\n  padding: 1px;\r\n}\r\n.smallinput {\r\n  /deep/.ant-input-group {\r\n    .ant-input {\r\n      height: 28px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}