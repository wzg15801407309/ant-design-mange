{"remainingRequest":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/views/projectAuth/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/views/projectAuth/index.vue","mtime":1582634015561},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// const columns =\r\nimport {\r\n  getPrijectManagers,\r\n  getAuthoritys,\r\n  deletePowerIitem\r\n} from '@/api/power'\r\nimport { getUserInfoByid } from '@/api/login'\r\nimport ModalForm from './module/ModalForm'\r\nexport default {\r\n  components: {\r\n    ModalForm\r\n  },\r\n  data() {\r\n    return {\r\n      columns: [\r\n        {\r\n          title: this.$t('project.user'),\r\n          dataIndex: 'username',\r\n          width: '20%'\r\n        },\r\n        {\r\n          title: this.$t('project.auth'),\r\n          dataIndex: 'level',\r\n          width: '20%'\r\n        },\r\n        {\r\n          title: this.$t('project.createTime'),\r\n          dataIndex: 'createTime',\r\n          sorter: true\r\n        },\r\n        {\r\n          title: this.$t('project.operation'),\r\n          scopedSlots: { customRender: 'operation' }\r\n        }\r\n      ],\r\n      listData: [],\r\n      pagination: {\r\n        // 页码\r\n        current: 1,\r\n        // 每页多少条\r\n        pageSize: 10\r\n      },\r\n      loading: false,\r\n      formData: {\r\n        id: this.$route.params.name,\r\n        level: 0,\r\n        start: 0,\r\n        num: 10,\r\n        // desc/asc选一个填 desc:倒序(createTime由新到旧) asc:正序(createTime由旧到新)\r\n        order: 'asc'\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getListData()\r\n  },\r\n  methods: {\r\n    getListData() {\r\n      this.loading = true\r\n      getPrijectManagers(this.formData).then(res => {\r\n        if (res.state) {\r\n          let ids = []\r\n          res.body.map(el => {\r\n            switch (el.level) {\r\n              case 0:\r\n                el.level = this.$t('project.creater')\r\n                break\r\n              case 1:\r\n                el.level = this.$t('project.management')\r\n                break\r\n              case 2:\r\n                el.level = this.$t('project.operators')\r\n                break\r\n              case 3:\r\n                el.level = this.$t('project.maintainers')\r\n                break\r\n              default:\r\n                el.level = this.$t('project.nodata')\r\n                break\r\n            }\r\n            ids.push(el.user)\r\n            el.createTime = this.$utils.timeFilter(el.createTime)\r\n            return el\r\n          })\r\n          getAuthoritys(ids.join('-')).then(res1 => {\r\n            this.loading = false\r\n            if (res1.state) {\r\n              res1.body.forEach((element, i) => {\r\n                res.body[i].username = element.nickname\r\n              })\r\n              this.listData = res.body\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleTableChange(pagination, filters, sorter) {\r\n      if (sorter['field'] == 'createTime') {\r\n        if (sorter['order'] == 'ascend') {\r\n          this.formData.order = 'asc'\r\n        } else if (sorter['order'] == 'descend') {\r\n          this.formData.order = 'desc'\r\n        }\r\n      }\r\n      this.getListData()\r\n    },\r\n    deleteauth(id) {\r\n      this.$confirm({\r\n        title: this.$t('project.delete'),\r\n        content: this.$t('project.isdelete'),\r\n        onOk: () => {\r\n          deletePowerIitem({ pid: this.formData.id, uid: id }).then(res => {\r\n            if (res.state) {\r\n              this.$message.success(this.$t('common.deletesuccess'))\r\n            } else {\r\n              this.$message.error(res.body)\r\n            }\r\n          })\r\n        },\r\n        onCancel() {}\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"index.vue","sourceRoot":"src/views/projectAuth","sourcesContent":["<template>\r\n  <div class=\"projectAuth\">\r\n    <ModalForm />\r\n    <a-table\r\n      :columns=\"columns\"\r\n      rowKey=\"_id\"\r\n      :dataSource=\"listData\"\r\n      :pagination=\"pagination\"\r\n      :loading=\"loading\"\r\n      @change=\"handleTableChange\"\r\n    >\r\n      <span slot=\"operation\" slot-scope=\"text, record\">\r\n        <a @click=\"deleteauth(record.user)\">{{ $t('project.delete') }}</a>\r\n      </span>\r\n    </a-table>\r\n  </div>\r\n</template>\r\n<script>\r\n// const columns =\r\nimport {\r\n  getPrijectManagers,\r\n  getAuthoritys,\r\n  deletePowerIitem\r\n} from '@/api/power'\r\nimport { getUserInfoByid } from '@/api/login'\r\nimport ModalForm from './module/ModalForm'\r\nexport default {\r\n  components: {\r\n    ModalForm\r\n  },\r\n  data() {\r\n    return {\r\n      columns: [\r\n        {\r\n          title: this.$t('project.user'),\r\n          dataIndex: 'username',\r\n          width: '20%'\r\n        },\r\n        {\r\n          title: this.$t('project.auth'),\r\n          dataIndex: 'level',\r\n          width: '20%'\r\n        },\r\n        {\r\n          title: this.$t('project.createTime'),\r\n          dataIndex: 'createTime',\r\n          sorter: true\r\n        },\r\n        {\r\n          title: this.$t('project.operation'),\r\n          scopedSlots: { customRender: 'operation' }\r\n        }\r\n      ],\r\n      listData: [],\r\n      pagination: {\r\n        // 页码\r\n        current: 1,\r\n        // 每页多少条\r\n        pageSize: 10\r\n      },\r\n      loading: false,\r\n      formData: {\r\n        id: this.$route.params.name,\r\n        level: 0,\r\n        start: 0,\r\n        num: 10,\r\n        // desc/asc选一个填 desc:倒序(createTime由新到旧) asc:正序(createTime由旧到新)\r\n        order: 'asc'\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getListData()\r\n  },\r\n  methods: {\r\n    getListData() {\r\n      this.loading = true\r\n      getPrijectManagers(this.formData).then(res => {\r\n        if (res.state) {\r\n          let ids = []\r\n          res.body.map(el => {\r\n            switch (el.level) {\r\n              case 0:\r\n                el.level = this.$t('project.creater')\r\n                break\r\n              case 1:\r\n                el.level = this.$t('project.management')\r\n                break\r\n              case 2:\r\n                el.level = this.$t('project.operators')\r\n                break\r\n              case 3:\r\n                el.level = this.$t('project.maintainers')\r\n                break\r\n              default:\r\n                el.level = this.$t('project.nodata')\r\n                break\r\n            }\r\n            ids.push(el.user)\r\n            el.createTime = this.$utils.timeFilter(el.createTime)\r\n            return el\r\n          })\r\n          getAuthoritys(ids.join('-')).then(res1 => {\r\n            this.loading = false\r\n            if (res1.state) {\r\n              res1.body.forEach((element, i) => {\r\n                res.body[i].username = element.nickname\r\n              })\r\n              this.listData = res.body\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleTableChange(pagination, filters, sorter) {\r\n      if (sorter['field'] == 'createTime') {\r\n        if (sorter['order'] == 'ascend') {\r\n          this.formData.order = 'asc'\r\n        } else if (sorter['order'] == 'descend') {\r\n          this.formData.order = 'desc'\r\n        }\r\n      }\r\n      this.getListData()\r\n    },\r\n    deleteauth(id) {\r\n      this.$confirm({\r\n        title: this.$t('project.delete'),\r\n        content: this.$t('project.isdelete'),\r\n        onOk: () => {\r\n          deletePowerIitem({ pid: this.formData.id, uid: id }).then(res => {\r\n            if (res.state) {\r\n              this.$message.success(this.$t('common.deletesuccess'))\r\n            } else {\r\n              this.$message.error(res.body)\r\n            }\r\n          })\r\n        },\r\n        onCancel() {}\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}