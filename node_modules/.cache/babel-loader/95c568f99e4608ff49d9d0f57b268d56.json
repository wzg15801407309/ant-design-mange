{"remainingRequest":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/babel-loader/lib/index.js!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/utils/mixin.js","dependencies":[{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/utils/mixin.js","mtime":1581057012329},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { deviceEnquire, DEVICE_TYPE } from \"./device.js\";\nimport { mapState } from 'vuex';\nimport * as types from '@/store/mutationType';\nvar mixinDevice = {\n  computed: _objectSpread({}, mapState({\n    device: function device(state) {\n      return state.app.device;\n    }\n  })),\n  methods: {\n    isMobile: function isMobile() {\n      return this.device === DEVICE_TYPE.MOBILE;\n    },\n    isDesktop: function isDesktop() {\n      return this.device === DEVICE_TYPE.DESKTOP;\n    },\n    isTablet: function isTablet() {\n      return this.device === DEVICE_TYPE.TABLET;\n    }\n  }\n};\nvar AppDeviceEnquire = {\n  mounted: function mounted() {\n    var $store = this.$store;\n    deviceEnquire(function (deviceType) {\n      switch (deviceType) {\n        case DEVICE_TYPE.DESKTOP:\n          $store.commit(types.COM_DEVICE, 'desktop');\n          break;\n\n        case DEVICE_TYPE.TABLET:\n          $store.commit(types.COM_DEVICE, 'tablet');\n          break;\n\n        case DEVICE_TYPE.MOBILE:\n        default:\n          $store.commit(types.COM_DEVICE, 'mobile');\n          break;\n      }\n    });\n  }\n};\nexport { AppDeviceEnquire, mixinDevice };",{"version":3,"sources":["/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/utils/mixin.js"],"names":["deviceEnquire","DEVICE_TYPE","mapState","types","mixinDevice","computed","device","state","app","methods","isMobile","MOBILE","isDesktop","DESKTOP","isTablet","TABLET","AppDeviceEnquire","mounted","$store","deviceType","commit","COM_DEVICE"],"mappings":";;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,WAAxB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;AACA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,oBACHH,QAAQ,CAAC;AACVI,IAAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUF,MAAd;AAAA;AADH,GAAD,CADL,CADU;AAMlBG,EAAAA,OAAO,EAAE;AACPC,IAAAA,QADO,sBACI;AACT,aAAO,KAAKJ,MAAL,KAAgBL,WAAW,CAACU,MAAnC;AACD,KAHM;AAIPC,IAAAA,SAJO,uBAIK;AACV,aAAO,KAAKN,MAAL,KAAgBL,WAAW,CAACY,OAAnC;AACD,KANM;AAOPC,IAAAA,QAPO,sBAOI;AACT,aAAO,KAAKR,MAAL,KAAgBL,WAAW,CAACc,MAAnC;AACD;AATM;AANS,CAApB;AAmBA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,OADuB,qBACb;AAAA,QACAC,MADA,GACW,IADX,CACAA,MADA;AAERlB,IAAAA,aAAa,CAAC,UAAAmB,UAAU,EAAI;AAE1B,cAAQA,UAAR;AACE,aAAKlB,WAAW,CAACY,OAAjB;AACEK,UAAAA,MAAM,CAACE,MAAP,CAAcjB,KAAK,CAACkB,UAApB,EAAgC,SAAhC;AACA;;AACF,aAAKpB,WAAW,CAACc,MAAjB;AACEG,UAAAA,MAAM,CAACE,MAAP,CAAcjB,KAAK,CAACkB,UAApB,EAAgC,QAAhC;AACA;;AACF,aAAKpB,WAAW,CAACU,MAAjB;AACA;AACEO,UAAAA,MAAM,CAACE,MAAP,CAAcjB,KAAK,CAACkB,UAApB,EAAgC,QAAhC;AACA;AAVJ;AAYD,KAdY,CAAb;AAeD;AAlBsB,CAAzB;AAoBA,SAASL,gBAAT,EAA2BZ,WAA3B","sourcesContent":["import { deviceEnquire, DEVICE_TYPE } from './device.js'\r\nimport { mapState } from 'vuex'\r\nimport * as types from '@/store/mutationType'\r\nconst mixinDevice = {\r\n  computed: {\r\n    ...mapState({\r\n      device: state => state.app.device\r\n    })\r\n  },\r\n  methods: {\r\n    isMobile() {\r\n      return this.device === DEVICE_TYPE.MOBILE\r\n    },\r\n    isDesktop() {\r\n      return this.device === DEVICE_TYPE.DESKTOP\r\n    },\r\n    isTablet() {\r\n      return this.device === DEVICE_TYPE.TABLET\r\n    }\r\n  }\r\n}\r\n\r\nconst AppDeviceEnquire = {\r\n  mounted() {\r\n    const { $store } = this;\r\n    deviceEnquire(deviceType => { \r\n      \r\n      switch (deviceType) {\r\n        case DEVICE_TYPE.DESKTOP:\r\n          $store.commit(types.COM_DEVICE, 'desktop')\r\n          break\r\n        case DEVICE_TYPE.TABLET:\r\n          $store.commit(types.COM_DEVICE, 'tablet')\r\n          break\r\n        case DEVICE_TYPE.MOBILE:\r\n        default:\r\n          $store.commit(types.COM_DEVICE, 'mobile')\r\n          break\r\n      }\r\n    })\r\n  }\r\n}\r\nexport { AppDeviceEnquire, mixinDevice }\r\n"]}]}