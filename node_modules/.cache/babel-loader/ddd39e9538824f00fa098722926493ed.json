{"remainingRequest":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/babel-loader/lib/index.js!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/views/login/resetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/views/login/resetPassword.vue","mtime":1582634015560},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar levelClass = ['error', 'error', 'warning', 'success'];\nvar levelColor = ['#ff0000', '#ff0000', '#ff7e05', '#52c41a'];\nimport { checkUsernameIsHave, postchangePsd, postEmailCode, checkEmailCode } from '@/api/login.js';\nexport default {\n  name: 'Register',\n  data: function data() {\n    //这里存放数据\n    return {\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        smsSendBtn: false,\n        passwordLevel: 0,\n        passwordLevelChecked: false,\n        percent: 10,\n        progressColor: '#FF0000'\n      },\n      // 邮箱码\n      codetoken: null,\n      // 获取邮箱验证 按钮\n      getCodeLoading: false,\n      // 按钮文字\n      codeText: this.$t('login.getcode'),\n      registerBtn: false,\n      decorator: {\n        username: ['username', {\n          rules: [{\n            required: true,\n            message: this.$t('login.inEmail')\n          }, {\n            validator: this.handleEmail\n          }],\n          validateTrigger: ['change', 'blur']\n        }],\n        code: ['code', {\n          rules: [{\n            required: true,\n            message: this.$t('login.inCode')\n          }],\n          validateTrigger: ['blur']\n        }],\n        password: ['password', {\n          rules: [{\n            required: true,\n            message: this.$t('login.inPwd')\n          }, {\n            validator: this.handlePasswordLevel\n          }],\n          validateTrigger: ['change', 'blur']\n        }],\n        confirmpassword: ['confirmpassword', {\n          rules: [{\n            required: true,\n            message: this.$t('login.inPwd')\n          }, {\n            validator: this.handlePasswordCheck\n          }],\n          validateTrigger: ['change', 'blur']\n        }]\n      }\n    };\n  },\n  created: function created() {},\n  //计算属性 类似于data概念\n  computed: {\n    passwordLevelClass: function passwordLevelClass() {\n      return levelClass[this.state.passwordLevel];\n    },\n    passwordLevelName: function passwordLevelName() {\n      var _this$$t = this.$t('password'),\n          easy = _this$$t.easy,\n          general = _this$$t.general,\n          hard = _this$$t.hard;\n\n      var levelNames = [easy, easy, general, hard];\n      return levelNames[this.state.passwordLevel];\n    },\n    passwordLevelColor: function passwordLevelColor() {\n      return levelColor[this.state.passwordLevel];\n    }\n  },\n  // 方法集合\n  methods: {\n    getEmailCode: function getEmailCode() {\n      var _this2 = this;\n\n      var email = this.form.getFieldValue('username');\n\n      if (this.$utils.isEmail(email)) {\n        //判断是否有这个邮箱\n        this.getCodeLoading = true;\n        this.codeText = this.$t('login.spendimg');\n        checkUsernameIsHave(email).then(function (res) {\n          if (res.state) {\n            if (res.body == 0) {\n              _this2.$confirm({\n                title: _this2.$t('common.warmPrompt'),\n                content: _this2.$t('login.noemail'),\n                okText: _this2.$t('login.goregister'),\n                cancelText: _this2.$t('common.black'),\n                onOk: function onOk() {\n                  _this2.$router.push({\n                    name: 'register'\n                  });\n                }\n              });\n\n              _this2.getCodeLoading = false;\n              _this2.codeText = _this2.$t('login.toSpend');\n              return false;\n            } else {\n              _this2.getCodeLoading = true;\n              _this2.codeText = _this2.$t('login.spendimg');\n              postEmailCode({\n                email: email\n              }).then(function (res) {\n                if (res.state) {\n                  _this2.codeText = 60;\n\n                  _this2.VerificationCode();\n\n                  _this2.codetoken = res.body;\n\n                  _this2.$message.success(_this2.$t('common.sendsuccess'));\n                } else {\n                  _this2.$message.error(res.body);\n\n                  _this2.codeText = _this2.$t('login.toSpend');\n                  _this2.getCodeLoading = false;\n                }\n              });\n            }\n          } else {\n            _this2.getCodeLoading = false;\n            _this2.codeText = _this2.$t('login.toSpend');\n          }\n        });\n      } else {\n        this.$message.error(this.$t('login.inputEmail'));\n      }\n    },\n    VerificationCode: function VerificationCode() {\n      var _this3 = this;\n\n      var _this = this; // 验证码定时器\n\n\n      setTimeout(function () {\n        if (_this.codeText > 1) {\n          _this.codeText--;\n\n          _this.VerificationCode();\n        } else {\n          _this.codeText = _this3.$t('login.toSpend');\n          _this3.getCodeLoading = false;\n        }\n      }, 1000);\n    },\n    handlePasswordLevel: function handlePasswordLevel(rule, value, callback) {\n      if (!value) {\n        this.state.passwordLevelChecked = false;\n        callback();\n        return false;\n      }\n\n      if (value.length < 6) {\n        this.state.passwordLevelChecked = false;\n        callback(new Error(this.$t('login.inPwd')));\n        return false;\n      }\n\n      this.state.passwordLevelChecked = true; // value ? null : callback()\n\n      var level = 0 // 判断这个字符串中有没有数字\n      ;\n      /[0-9]/.test(value) ? level++ : null // 判断字符串中有没有字母\n      ;\n      /[a-zA-Z]/.test(value) ? level++ : null // 判断字符串中有没有特殊符号\n      ;\n      /[^0-9a-zA-Z_]/.test(value) ? level++ : null;\n      this.state.passwordLevel = level;\n      level >= 3 ? this.state.percent = 100 : this.state.percent = level * 30;\n      level < 2 ? callback(new Error(this.$t('login.pwdstrengthNo'))) : null;\n      callback();\n    },\n    handlePasswordCheck: function handlePasswordCheck(rule, value, callback) {\n      value ? null : callback();\n      var password = this.form.getFieldValue('password');\n\n      if (value && password && value.trim() !== password.trim()) {\n        callback(new Error(this.$t('login.twoPassworderror')));\n      }\n\n      callback();\n    },\n    handleSubmit: function handleSubmit(e) {\n      var _this4 = this;\n\n      e.preventDefault();\n      this.form.validateFields({\n        force: true\n      },\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(err, values) {\n          var data;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!err) {\n                    data = {\n                      code: values.code,\n                      password: values.password,\n                      secret: _this4.codetoken\n                    };\n                    _this4.registerBtn = true;\n                    postchangePsd(data).then(function (resp) {\n                      _this4.registerBtn = false;\n\n                      if (resp.state) {\n                        _this4.$message.success(_this4.$t('login.retetSuccess'));\n\n                        _this4.$router.push({\n                          name: 'login'\n                        });\n                      } else {\n                        _this4.$message.error(res.body);\n                      }\n                    });\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    handleEmail: function handleEmail(rule, value, callback) {\n      value ? null : callback();\n      var regex = /^[A-Za-z\\d]+([-_.][A-Za-z\\d]+)*@([A-Za-z\\d]+[-.])+[A-Za-z\\d]{2,4}$/;\n\n      if (!regex.test(value)) {\n        callback(this.$t('login.inputEmail'));\n      }\n\n      callback();\n    }\n  }\n};",{"version":3,"sources":["resetPassword.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 注册页面 -->\r\n<template>\r\n  <div class=\"mian user-layout-register\">\r\n    <div class=\"title\">\r\n      <span class=\"title-l\">{{ $t('login.changePwd') }} </span>\r\n    </div>\r\n    <a-form ref=\"formRegister\" :form=\"form\" @submit=\"handleSubmit\">\r\n      <a-form-item>\r\n        <a-input\r\n          size=\"large\"\r\n          type=\"text\"\r\n          :placeholder=\"$t('login.email')\"\r\n          v-decorator=\"decorator.username\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-row :gutter=\"8\">\r\n          <a-col :span=\"14\">\r\n            <a-input\r\n              size=\"large\"\r\n              type=\"text\"\r\n              :placeholder=\"$t('login.verificationcode')\"\r\n              :disabled=\"!codetoken\"\r\n              v-decorator=\"decorator.code\"\r\n            />\r\n          </a-col>\r\n          <a-col :span=\"10\">\r\n            <a-button\r\n              style=\"width:100%\"\r\n              :loading=\"getCodeLoading\"\r\n              type=\"primary\"\r\n              @click=\"getEmailCode\"\r\n              >{{ codeText }}</a-button\r\n            >\r\n          </a-col>\r\n        </a-row>\r\n      </a-form-item>\r\n      <a-popover\r\n        placement=\"rightTop\"\r\n        :trigger=\"['focus']\"\r\n        :getPopupContainer=\"trigger => trigger.parentElement\"\r\n        v-model=\"state.passwordLevelChecked\"\r\n      >\r\n        <template slot=\"content\">\r\n          <div :style=\"{ width: '240px' }\">\r\n            <div :class=\"['user-register', passwordLevelClass]\">\r\n              {{ $t('login.strength') }}：\r\n              <span>{{ passwordLevelName }}</span>\r\n            </div>\r\n            <a-progress\r\n              :percent=\"state.percent\"\r\n              :showInfo=\"false\"\r\n              :strokeColor=\"passwordLevelColor\"\r\n            />\r\n            <div style=\"margin-top: 10px;\">\r\n              <span>{{ $t('login.pwdTip') }}</span>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <a-form-item>\r\n          <a-input\r\n            size=\"large\"\r\n            type=\"password\"\r\n            autocomplete=\"false\"\r\n            :placeholder=\"$t('login.inPwd')\"\r\n            v-decorator=\"decorator.password\"\r\n          ></a-input>\r\n        </a-form-item>\r\n      </a-popover>\r\n      <a-form-item>\r\n        <a-input\r\n          size=\"large\"\r\n          type=\"password\"\r\n          autocomplete=\"false\"\r\n          :placeholder=\"$t('login.toPwd')\"\r\n          v-decorator=\"decorator.confirmpassword\"\r\n        ></a-input>\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          class=\"register-button\"\r\n          :loading=\"registerBtn\"\r\n          >{{ $t('login.resetPwd') }}\r\n        </a-button>\r\n        <router-link :to=\"{ name: 'login' }\">\r\n          <a-button size=\"large\" type=\"primary\" class=\"register-button\">\r\n            {{ $t('login.goLoginpage') }}\r\n          </a-button>\r\n        </router-link>\r\n      </a-form-item>\r\n    </a-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst levelClass = ['error', 'error', 'warning', 'success']\r\nconst levelColor = ['#ff0000', '#ff0000', '#ff7e05', '#52c41a']\r\nimport {\r\n  checkUsernameIsHave,\r\n  postchangePsd,\r\n  postEmailCode,\r\n  checkEmailCode\r\n} from '@/api/login.js'\r\nexport default {\r\n  name: 'Register',\r\n  data() {\r\n    //这里存放数据\r\n    return {\r\n      form: this.$form.createForm(this),\r\n      state: {\r\n        time: 60,\r\n        smsSendBtn: false,\r\n        passwordLevel: 0,\r\n        passwordLevelChecked: false,\r\n        percent: 10,\r\n        progressColor: '#FF0000'\r\n      },\r\n      // 邮箱码\r\n      codetoken: null,\r\n      // 获取邮箱验证 按钮\r\n      getCodeLoading: false,\r\n      // 按钮文字\r\n      codeText: this.$t('login.getcode'),\r\n      registerBtn: false,\r\n      decorator: {\r\n        username: [\r\n          'username',\r\n          {\r\n            rules: [\r\n              { required: true, message: this.$t('login.inEmail') },\r\n              { validator: this.handleEmail }\r\n            ],\r\n            validateTrigger: ['change', 'blur']\r\n          }\r\n        ],\r\n        code: [\r\n          'code',\r\n          {\r\n            rules: [{ required: true, message: this.$t('login.inCode') }],\r\n            validateTrigger: ['blur']\r\n          }\r\n        ],\r\n        password: [\r\n          'password',\r\n          {\r\n            rules: [\r\n              { required: true, message: this.$t('login.inPwd') },\r\n              { validator: this.handlePasswordLevel }\r\n            ],\r\n            validateTrigger: ['change', 'blur']\r\n          }\r\n        ],\r\n        confirmpassword: [\r\n          'confirmpassword',\r\n          {\r\n            rules: [\r\n              { required: true, message: this.$t('login.inPwd') },\r\n              { validator: this.handlePasswordCheck }\r\n            ],\r\n            validateTrigger: ['change', 'blur']\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {},\r\n  //计算属性 类似于data概念\r\n  computed: {\r\n    passwordLevelClass() {\r\n      return levelClass[this.state.passwordLevel]\r\n    },\r\n    passwordLevelName() {\r\n      const { easy, general, hard } = this.$t('password')\r\n      const levelNames = [easy, easy, general, hard]\r\n      return levelNames[this.state.passwordLevel]\r\n    },\r\n    passwordLevelColor() {\r\n      return levelColor[this.state.passwordLevel]\r\n    }\r\n  },\r\n  // 方法集合\r\n  methods: {\r\n    getEmailCode() {\r\n      const email = this.form.getFieldValue('username')\r\n\r\n      if (this.$utils.isEmail(email)) {\r\n        //判断是否有这个邮箱\r\n        this.getCodeLoading = true\r\n        this.codeText = this.$t('login.spendimg')\r\n        checkUsernameIsHave(email).then(res => {\r\n          if (res.state) {\r\n            if (res.body == 0) {\r\n              this.$confirm({\r\n                title: this.$t('common.warmPrompt'),\r\n                content: this.$t('login.noemail'),\r\n                okText: this.$t('login.goregister'),\r\n                cancelText: this.$t('common.black'),\r\n                onOk: () => {\r\n                  this.$router.push({ name: 'register' })\r\n                }\r\n              })\r\n              this.getCodeLoading = false\r\n              this.codeText = this.$t('login.toSpend')\r\n              return false\r\n            } else {\r\n              this.getCodeLoading = true\r\n              this.codeText = this.$t('login.spendimg')\r\n              postEmailCode({ email: email }).then(res => {\r\n                if (res.state) {\r\n                  this.codeText = 60\r\n                  this.VerificationCode()\r\n                  this.codetoken = res.body\r\n                  this.$message.success(this.$t('common.sendsuccess'),\r\n                  )\r\n                } else {\r\n                  this.$message.error(res.body)\r\n                  this.codeText = this.$t('login.toSpend')\r\n                  this.getCodeLoading = false\r\n                }\r\n              })\r\n            }\r\n          } else {\r\n            this.getCodeLoading = false\r\n            this.codeText = this.$t('login.toSpend')\r\n          }\r\n        })\r\n      } else {\r\n        this.$message.error(this.$t('login.inputEmail'))\r\n      }\r\n    },\r\n    VerificationCode() {\r\n      const _this = this\r\n      // 验证码定时器\r\n      setTimeout(() => {\r\n        if (_this.codeText > 1) {\r\n          _this.codeText--\r\n          _this.VerificationCode()\r\n        } else {\r\n          _this.codeText = this.$t('login.toSpend')\r\n          this.getCodeLoading = false\r\n        }\r\n      }, 1000)\r\n    },\r\n    handlePasswordLevel(rule, value, callback) {\r\n      if (!value) {\r\n        this.state.passwordLevelChecked = false\r\n        callback()\r\n        return false\r\n      }\r\n      if (value.length < 6) {\r\n        this.state.passwordLevelChecked = false\r\n        callback(new Error(this.$t('login.inPwd')))\r\n        return false\r\n      }\r\n      this.state.passwordLevelChecked = true\r\n      // value ? null : callback()\r\n      let level = 0\r\n      // 判断这个字符串中有没有数字\r\n      ;/[0-9]/.test(value) ? level++ : null\r\n      // 判断字符串中有没有字母\r\n      ;/[a-zA-Z]/.test(value) ? level++ : null\r\n      // 判断字符串中有没有特殊符号\r\n      ;/[^0-9a-zA-Z_]/.test(value) ? level++ : null\r\n      this.state.passwordLevel = level\r\n      level >= 3\r\n        ? (this.state.percent = 100)\r\n        : (this.state.percent = level * 30)\r\n      level < 2 ? callback(new Error(this.$t('login.pwdstrengthNo'))) : null\r\n      callback()\r\n    },\r\n    handlePasswordCheck(rule, value, callback) {\r\n      value ? null : callback()\r\n      const password = this.form.getFieldValue('password')\r\n      if (value && password && value.trim() !== password.trim()) {\r\n        callback(new Error(this.$t('login.twoPassworderror')))\r\n      }\r\n      callback()\r\n    },\r\n    handleSubmit(e) {\r\n      e.preventDefault()\r\n\r\n      this.form.validateFields({ force: true }, async (err, values) => {\r\n        if (!err) {\r\n          const data = {\r\n            code: values.code,\r\n            password: values.password,\r\n            secret: this.codetoken\r\n          }\r\n          this.registerBtn = true\r\n          postchangePsd(data).then(resp => {\r\n            this.registerBtn = false\r\n            if (resp.state) {\r\n              this.$message.success(this.$t('login.retetSuccess'))\r\n              this.$router.push({ name: 'login' })\r\n            }else{\r\n              this.$message.error(res.body)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleEmail(rule, value, callback) {\r\n      value ? null : callback()\r\n      const regex = /^[A-Za-z\\d]+([-_.][A-Za-z\\d]+)*@([A-Za-z\\d]+[-.])+[A-Za-z\\d]{2,4}$/\r\n      if (!regex.test(value)) {\r\n        callback(this.$t('login.inputEmail'))\r\n      }\r\n      callback()\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n.user-register {\r\n  &.error {\r\n    color: #ff0000;\r\n  }\r\n\r\n  &.warning {\r\n    color: #ff7e05;\r\n  }\r\n\r\n  &.success {\r\n    color: #52c41a;\r\n  }\r\n}\r\n\r\n.user-layout-register {\r\n  .title {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    margin: 40px 0;\r\n    color: rgba(0, 0, 0, 0.5);\r\n    .title-l {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n  .ant-input-group-addon:first-child {\r\n    background-color: #fff;\r\n  }\r\n}\r\n</style>\r\n<style lang=\"less\" scoped>\r\n.user-layout-register {\r\n  & > h3 {\r\n    font-size: 16px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n  }\r\n\r\n  .register-button {\r\n    width: 100%;\r\n    font-weight: 400;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/login"}]}