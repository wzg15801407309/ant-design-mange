{"remainingRequest":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/babel-loader/lib/index.js!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/views/login/index.vue","mtime":1582634015560},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport { checkCode } from '@/api/project';\nimport { login, getUserInfo, platformLogin } from '@/api/login';\nimport OtherLogin from \"./OtherLogin.vue\";\nexport default {\n  components: {\n    OtherLogin: OtherLogin\n  },\n  data: function data() {\n    return {\n      form: this.$form.createForm(this),\n      loginLoding: false,\n      loading: false,\n      // 定时器\n      timeout: null,\n      decorator: {\n        username: ['username', {\n          rules: [{\n            required: true,\n            message: this.$t('login.placeholderUsername')\n          }, {\n            validator: this.handleUsernameOrEmail\n          }],\n          validateTrigger: 'blur'\n        }],\n        password: ['password', {\n          rules: [{\n            required: true,\n            message: this.$t('login.placeholderPassword')\n          }],\n          validateTrigger: 'blur'\n        }]\n      },\n      otherinfo: null,\n      plantformdata: {}\n    };\n  },\n  // 方法集合\n  methods: _objectSpread({}, mapActions(['SetToken', 'SetUserInfo']), {\n    // 表单的提交\n    handleSubmit: function handleSubmit(e) {\n      var _this = this;\n\n      e.preventDefault();\n      this.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          // serve请求\n          _this.loginLoding = true;\n          login(values).then(function (res) {\n            if (res.state) {\n              _this.SetToken(res.body);\n\n              getUserInfo().then(function (res) {\n                if (res.state) {\n                  _this.SetUserInfo(res.body); // 登陆成功\n\n\n                  _this.loginSuccess();\n                }\n              });\n            } else {\n              _this.$message.error(res.body);\n\n              _this.loginLoding = false;\n            }\n          });\n        }\n      });\n    },\n    loginSuccess: function loginSuccess() {\n      // 判断是否是其他登陆\n      if (this.otherinfo) {\n        window.location.href = this.$utils.getUrl(this.otherinfo.type, this.otherinfo.code);\n      } else {\n        // 正常登陆\n        this.$router.push({\n          name: 'index'\n        });\n        this.$notification.success({\n          message: this.$t('login.welcome'),\n          description: \"\".concat(this.$utils.timeFix(this.$t('welcome')), \" \").concat(this.$t('login.welcomeBack'))\n        });\n      }\n    },\n    // 自定义指令中的方法的实现\n    handleUsernameOrEmail: function handleUsernameOrEmail(rule, value, callback) {\n      value ? null : callback();\n      var regex = /^[A-Za-z\\d]+([-_.][A-Za-z\\d]+)*@([A-Za-z\\d]+[-.])+[A-Za-z\\d]{2,4}$/;\n      regex.test(value) ? callback() : callback(this.$t('login.inputEmail'));\n    },\n    changeloading: function changeloading() {\n      this.loading = true;\n    },\n    //论坛预约的登录方式\n    loginOtherWeb: function loginOtherWeb() {\n      var _this2 = this;\n\n      // 检测跳转涞源 如果路由上传入了 to 和 code\n      var _this$$route$query = this.$route.query,\n          to = _this$$route$query.to,\n          code = _this$$route$query.code;\n\n      if ((to == 'community' || to == 'reservation') && code) {\n        var data = {\n          type: to == 'community' ? 1 : 0,\n          code: code\n        }; // 获取 项目信息\n\n        checkCode(data.type, data.code).then(function (res) {\n          if (res.state) {\n            _this2.otherinfo = res.body;\n            _this2.otherinfo.type = data.type;\n          }\n        });\n      }\n    }\n  }),\n  mounted: function mounted() {\n    this.loginOtherWeb();\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 登录界面 -->\n<template>\n  <div class=\"login\">\n     <a-spin :spinning=\"loading\">\n    <!-- <div class=\"otherlogin\" v-if=\"otherinfo\">\n      <p>{{ $t('login.loginto') }}</p>\n      <div class=\"logo\"><img :src=\"otherinfo.logo\" alt=\"logo\" /></div>\n      <a-button\n        type=\"link\"\n        icon=\"close\"\n        class=\"btn\"\n        @click=\"otherinfo = null\"\n      />\n    </div> -->\n    <div class=\"title\">\n      <span>{{ $t('login.login') }} </span>\n      {{ otherinfo ? otherinfo.title : 'GANE NANUM' }}\n    </div>\n    <!-- 表单 -->\n    <a-form ref=\"formLogin\" :form=\"form\" @submit=\"handleSubmit\">\n      <!-- username -->\n      <a-form-item>\n        <a-input\n          size=\"large\"\n          type=\"text\"\n          :placeholder=\"$t('login.placeholderUsername')\"\n          v-decorator=\"decorator.username\"\n        >\n          <a-icon slot=\"prefix\" type=\"user\" />\n        </a-input>\n      </a-form-item>\n      <!-- password -->\n      <a-form-item>\n        <a-input\n          size=\"large\"\n          type=\"password\"\n          autocomplete=\"false\"\n          :placeholder=\"$t('login.placeholderPassword')\"\n          v-decorator=\"decorator.password\"\n        >\n          <a-icon slot=\"prefix\" type=\"lock\" />\n        </a-input>\n      </a-form-item>\n      <a-form-item>\n        <a-checkbox v-decorator=\"['rememberMe']\">{{\n          $t('login.autoLogin')\n        }}</a-checkbox>\n        <router-link :to=\"{ name: 'resetPassword' }\" class=\"forge-password\"\n          >{{ $t('login.forgetpwd') }}?</router-link\n        >\n      </a-form-item>\n      <a-form-item>\n        <a-button\n          size=\"large\"\n          type=\"primary\"\n          htmlType=\"submit\"\n          class=\"login-button\"\n          :loading=\"loginLoding\"\n          >{{ $t('login.login') }}</a-button\n        >\n      </a-form-item>\n      <!-- loading -->\n      <OtherLogin @changeloading=\"changeloading\" />\n      <a-divider style=\"color:#666;margin:50px 0 20px;font-size:12px\">\n        {{ $t('login.notAccount') }}</a-divider\n      >\n      <a-form-item>\n        <router-link :to=\"{ name: 'register' }\">\n          <a-button size=\"large\" class=\"register-button\">{{\n            $t('login.createAccount')\n          }}</a-button>\n        </router-link>\n      </a-form-item>\n    </a-form>\n    </a-spin>\n  </div>\n</template>\n<script>\nimport { mapActions } from 'vuex'\nimport { checkCode } from '@/api/project'\nimport { login, getUserInfo, platformLogin } from '@/api/login'\nimport OtherLogin from './OtherLogin.vue'\nexport default {\n  components: {\n    OtherLogin\n  },\n  data() {\n    return {\n      form: this.$form.createForm(this),\n      loginLoding: false,\n      loading:false,\n      // 定时器\n      timeout: null,\n      decorator: {\n        username: [\n          'username',\n          {\n            rules: [\n              {\n                required: true,\n                message: this.$t('login.placeholderUsername')\n              },\n              { validator: this.handleUsernameOrEmail }\n            ],\n            validateTrigger: 'blur'\n          }\n        ],\n        password: [\n          'password',\n          {\n            rules: [\n              {\n                required: true,\n                message: this.$t('login.placeholderPassword')\n              }\n            ],\n            validateTrigger: 'blur'\n          }\n        ]\n      },\n      otherinfo: null,\n      plantformdata: {}\n    }\n  },\n  \n  // 方法集合\n  methods: {\n    ...mapActions(['SetToken', 'SetUserInfo']),\n    // 表单的提交\n    handleSubmit(e) {\n      e.preventDefault()\n      this.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          // serve请求\n          this.loginLoding = true\n          login(values).then(res => {\n            if (res.state) {\n              this.SetToken(res.body)\n              getUserInfo().then(res => {\n                if (res.state) {\n                  this.SetUserInfo(res.body)\n                  // 登陆成功\n                  this.loginSuccess()\n                }\n              })\n            } else {\n              this.$message.error(res.body); \n              this.loginLoding = false\n            }\n          })\n        }\n      })\n    },\n    loginSuccess() {\n      // 判断是否是其他登陆\n      if (this.otherinfo) {\n        window.location.href = this.$utils.getUrl(\n          this.otherinfo.type,\n          this.otherinfo.code\n        )\n      } else {\n        // 正常登陆\n        this.$router.push({ name: 'index' }) \n        this.$notification.success({\n          message: this.$t('login.welcome'),\n          description: `${this.$utils.timeFix(this.$t('welcome'))} ${this.$t(\n            'login.welcomeBack'\n          )}`\n        })\n      }\n    },\n    // 自定义指令中的方法的实现\n    handleUsernameOrEmail(rule, value, callback) {\n      value ? null : callback()\n      const regex =  /^[A-Za-z\\d]+([-_.][A-Za-z\\d]+)*@([A-Za-z\\d]+[-.])+[A-Za-z\\d]{2,4}$/\n      regex.test(value) ? callback() : callback(this.$t('login.inputEmail'))\n    },\n    changeloading(){\n      this.loading = true\n    },\n    //论坛预约的登录方式\n    loginOtherWeb() {\n      // 检测跳转涞源 如果路由上传入了 to 和 code\n      const { to, code } = this.$route.query\n      if ((to == 'community' || to == 'reservation') && code) {\n        const data = { type: to == 'community' ? 1 : 0, code }\n        // 获取 项目信息\n        checkCode(data.type, data.code).then(res => {\n          if (res.state) {\n            this.otherinfo = res.body\n            this.otherinfo.type = data.type\n          }\n        })\n      }\n    }\n  },\n  mounted() {\n    this.loginOtherWeb()\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.login {\n  .title {\n    font-size: 16px;\n    font-weight: bold;\n    margin: 40px 0;\n    color: rgba(0, 0, 0, 0.5);\n    span {\n      font-size: 20px;\n    }\n  }\n  .ant-alert {\n    margin-bottom: 20px;\n  }\n  .anticon {\n    color: rgba(0, 0, 0, 0.25);\n  }\n  .login-button {\n    width: 100%;\n  }\n  .forge-password {\n    float: right;\n    font-size: 14px;\n  }\n  .register-button {\n    padding: 0 15px;\n    font-size: 14px;\n    height: 40px;\n    width: 100%;\n    font-weight: 500;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/login"}]}