{"remainingRequest":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/babel-loader/lib/index.js!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/api/login.js","dependencies":[{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/api/login.js","mtime":1581670424001},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Http from '@/utils/http';\nimport store from '@/store'; // 平台？\n\nvar plantform = 'pangsky'; // 从全局配置中拿取\n\nvar userAPI = process.env.VUE_APP_USER_URL; //账号密码登录\n\nexport var login = function login(parameter) {\n  return Http.post(userAPI + 'authority/login', {\n    plantform: plantform,\n    payload: parameter\n  });\n}; //平台登录 username和password\n\nexport var platformLogin = function platformLogin(_ref) {\n  var plantform = _ref.plantform,\n      id = _ref.id,\n      email = _ref.email,\n      head = _ref.head,\n      username = _ref.username,\n      password = _ref.password;\n  return Http.post(userAPI + 'authority/login', {\n    plantform: plantform,\n    payload: {\n      plantformId: id,\n      email: email,\n      head: head,\n      username: username,\n      password: password\n    }\n  });\n}; //退出登录\n\nexport var Loginout = function Loginout() {\n  console.log('退出登录');\n}; // 注册\n\nexport var register = function register(parameter) {\n  return Http.post(userAPI + 'authority/registe', {\n    plantform: plantform,\n    payload: parameter\n  });\n}; // 平台注册\n\nexport var plantformRegidter = function plantformRegidter(_ref2) {\n  var type = _ref2.type,\n      id = _ref2.id,\n      values = _ref2.values,\n      head = _ref2.head;\n  return Http.post(userAPI + 'authority/registe', {\n    plantform: type,\n    payload: _objectSpread({\n      plantformId: id\n    }, values, {\n      head: head\n    })\n  });\n}; // 获取token中的用户信息\n\nexport var getUserInfo = function getUserInfo() {\n  return Http.get(userAPI + 'authority/info');\n}; //通过id获取用户信息\n\nexport var getUserInfoByid = function getUserInfoByid(id) {\n  return Http.get(userAPI + \"authority/info/pangsky/\".concat(id));\n}; //判断用户名是否存在\n\nexport var checkUsernameIsHave = function checkUsernameIsHave(username) {\n  return Http.get(userAPI + \"authority/username/\".concat(username));\n}; //修改用户信息\n\nexport var changeUsername = function changeUsername(data, id) {\n  return Http.post(userAPI + 'authority/info', {\n    id: id,\n    payload: data\n  });\n}; //发送邮箱验证码\n\nexport var postEmailCode = function postEmailCode(_ref3) {\n  var email = _ref3.email;\n  return Http.post(userAPI + 'authority/emailCode', {\n    email: email,\n    lang: store.getters.language\n  });\n}; //验证验证码\n\nexport var checkEmailCode = function checkEmailCode(data) {\n  return Http.post(userAPI + 'authority/checkEmailCode', data);\n}; //修改密码\n\nexport var postchangePsd = function postchangePsd(data) {\n  return Http.post(userAPI + 'authority/changePsd', data);\n}; // 第三方组成\n\nexport var postPlantform = function postPlantform(data) {\n  return Http.post(userAPI + 'authority/plantform', data);\n};",{"version":3,"sources":["/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/api/login.js"],"names":["Http","store","plantform","userAPI","process","env","VUE_APP_USER_URL","login","parameter","post","payload","platformLogin","id","email","head","username","password","plantformId","Loginout","console","log","register","plantformRegidter","type","values","getUserInfo","get","getUserInfoByid","checkUsernameIsHave","changeUsername","data","postEmailCode","lang","getters","language","checkEmailCode","postchangePsd","postPlantform"],"mappings":"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","sourcesContent":["import Http from '@/utils/http'\r\nimport store from '@/store'\r\n// 平台？\r\nlet plantform = 'pangsky'\r\n// 从全局配置中拿取\r\nconst userAPI = process.env.VUE_APP_USER_URL\r\n\r\n//账号密码登录\r\nexport const login = parameter =>\r\n  Http.post(userAPI + 'authority/login', {\r\n    plantform: plantform,\r\n    payload: parameter\r\n  })\r\n\r\n//平台登录 username和password\r\nexport const platformLogin = ({ plantform, id, email, head,username,password }) =>\r\n  Http.post(userAPI + 'authority/login', {\r\n    plantform,\r\n    payload: { plantformId: id, email, head,username,password }\r\n  })\r\n\r\n//退出登录\r\nexport const Loginout = () => {\r\n  console.log('退出登录')\r\n}\r\n\r\n// 注册\r\nexport const register = parameter =>\r\n  Http.post(userAPI + 'authority/registe', {\r\n    plantform: plantform,\r\n    payload: parameter\r\n  })\r\n\r\n// 平台注册\r\nexport const plantformRegidter = ({ type, id, values, head }) =>\r\n  Http.post(userAPI + 'authority/registe', {\r\n    plantform: type,\r\n    payload: { plantformId: id, ...values, head }\r\n  })\r\n\r\n// 获取token中的用户信息\r\nexport const getUserInfo = () => Http.get(userAPI + 'authority/info')\r\n\r\n//通过id获取用户信息\r\nexport const getUserInfoByid = id =>\r\n  Http.get(userAPI + `authority/info/pangsky/${id}`)\r\n\r\n//判断用户名是否存在\r\nexport const checkUsernameIsHave = username =>\r\n  Http.get(userAPI + `authority/username/${username}`)\r\n\r\n//修改用户信息\r\nexport const changeUsername = (data, id) =>\r\n  Http.post(userAPI + 'authority/info', {\r\n    id: id,\r\n    payload: data\r\n  })\r\n\r\n//发送邮箱验证码\r\nexport const postEmailCode = ({ email }) =>\r\n  Http.post(userAPI + 'authority/emailCode', {\r\n    email,\r\n    lang: store.getters.language\r\n  })\r\n\r\n//验证验证码\r\nexport const checkEmailCode = data =>\r\n  Http.post(userAPI + 'authority/checkEmailCode', data)\r\n\r\n//修改密码\r\nexport const postchangePsd = data =>\r\n  Http.post(userAPI + 'authority/changePsd', data)\r\n\r\n// 第三方组成\r\nexport const postPlantform = data =>\r\n  Http.post(userAPI + 'authority/plantform', data)\r\n"]}]}