{"remainingRequest":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/babel-loader/lib/index.js!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/plugins/axios.js","dependencies":[{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/plugins/axios.js","mtime":1582184940984},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhuqin.wei/Desktop/yhy/pangSky-console/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["'use strict';\n\nimport axios from 'axios';\nimport store from '@/store';\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\naxios.defaults.withCredentials = false;\nvar config = {\n  timeout: 30 * 1000 // Timeout\n\n};\n\nvar _axios = axios.create(config); // 请求拦截\n\n\n_axios.interceptors.request.use(function (config) {\n  if (store.getters.token) {\n    config.headers['Authorization'] = \"Bearer \".concat(store.getters.token);\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); // 相应拦截\n\n\n_axios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  // Do something with response error\n  console.log(error); // let msg = ''\n  // if (!error.response) {\n  //   notification.error({\n  //     message: 'Forbidden',\n  //     description: 'error'\n  //   })\n  //   return Promise.reject(error)\n  // }\n  // switch (error.response['status']) {\n  // case 500:\n  // case 501:\n  //   msg = '后台错误'\n  //   break\n  // case 502:\n  // case 503:\n  //   msg = '后台重启'\n  //   break\n  //   case 404:\n  //     msg = '接口不存在'\n  //     break\n  //   case 401:\n  //     msg = '你没有该权限'\n  //     break\n  //   case 400:\n  //     msg = error.response.data.msg\n  //     break\n  //   default:\n  //     msg = '未知错误'\n  // }\n  // notification.error({\n  //   message: 'Forbidden',\n  //   description: msg\n  // })\n\n  return Promise.reject(error);\n});\n\nexport default _axios;",{"version":3,"sources":["/Users/zhuqin.wei/Desktop/yhy/pangSky-console/src/plugins/axios.js"],"names":["axios","store","defaults","headers","post","withCredentials","config","timeout","_axios","create","interceptors","request","use","getters","token","error","Promise","reject","response","console","log"],"mappings":"AAAA;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IACE,mCADF;AAEAJ,KAAK,CAACE,QAAN,CAAeG,eAAf,GAAiC,KAAjC;AAEA,IAAIC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE,KAAK,IADH,CACQ;;AADR,CAAb;;AAIA,IAAMC,MAAM,GAAGR,KAAK,CAACS,MAAN,CAAaH,MAAb,CAAf,C,CAEA;;;AACAE,MAAM,CAACE,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CACE,UAAAN,MAAM,EAAI;AACR,MAAIL,KAAK,CAACY,OAAN,CAAcC,KAAlB,EAAyB;AACvBR,IAAAA,MAAM,CAACH,OAAP,CAAe,eAAf,qBAA4CF,KAAK,CAACY,OAAN,CAAcC,KAA1D;AACD;;AACD,SAAOR,MAAP;AACD,CANH,EAOE,UAAAS,KAAK,EAAI;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CATH,E,CAYA;;;AACAP,MAAM,CAACE,YAAP,CAAoBQ,QAApB,CAA6BN,GAA7B,CACE,UAAAM,QAAQ,EAAI;AACV,SAAOA,QAAP;AACD,CAHH,EAIE,UAAAH,KAAK,EAAI;AACP;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAFO,CAGP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CA5CH;;AA8CA,eAAeP,MAAf","sourcesContent":["'use strict'\r\nimport axios from 'axios'\r\nimport store from '@/store'\r\n\r\naxios.defaults.headers.post['Content-Type'] =\r\n  'application/x-www-form-urlencoded'\r\naxios.defaults.withCredentials = false\r\n\r\nlet config = {\r\n  timeout: 30 * 1000 // Timeout\r\n}\r\n\r\nconst _axios = axios.create(config)\r\n\r\n// 请求拦截\r\n_axios.interceptors.request.use(\r\n  config => {\r\n    if (store.getters.token) {\r\n      config.headers['Authorization'] = `Bearer ${store.getters.token}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 相应拦截\r\n_axios.interceptors.response.use(\r\n  response => {\r\n    return response\r\n  },\r\n  error => {\r\n    // Do something with response error\r\n    console.log(error)\r\n    // let msg = ''\r\n\r\n    // if (!error.response) {\r\n    //   notification.error({\r\n    //     message: 'Forbidden',\r\n    //     description: 'error'\r\n    //   })\r\n    //   return Promise.reject(error)\r\n    // }\r\n\r\n    // switch (error.response['status']) {\r\n    // case 500:\r\n    // case 501:\r\n    //   msg = '后台错误'\r\n    //   break\r\n    // case 502:\r\n    // case 503:\r\n    //   msg = '后台重启'\r\n    //   break\r\n    //   case 404:\r\n    //     msg = '接口不存在'\r\n    //     break\r\n    //   case 401:\r\n    //     msg = '你没有该权限'\r\n\r\n    //     break\r\n    //   case 400:\r\n    //     msg = error.response.data.msg\r\n    //     break\r\n    //   default:\r\n    //     msg = '未知错误'\r\n    // }\r\n    // notification.error({\r\n    //   message: 'Forbidden',\r\n    //   description: msg\r\n    // })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nexport default _axios\r\n"]}]}